@model ClinicBooking.Models.ViewModels.ViewModel<ClinicBooking.Models.Appointment>


<div class="col-3">
    @await Component.InvokeAsync("NavigationMenu")
</div>
<div class="col-9 container d-flex flex-column">
    <div style="min-height:250px" class="row flex-grow-1">
        @foreach (var p in Model.Collections ?? Enumerable.Empty<ClinicBooking.Models.Appointment>())
        {
            <partial name="AppointmentSummary" model="p" />
        }
    </div>

    @{
        var specialization = ViewBag.SelectedSpecialization as string;
    }
    <div style="margin-top: 110px" class="pagination-wrapper d-flex justify-content-center">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.PagingInfo.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PagingInfo.CurrentPage - 1, specialization })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                @for (int i = 1; i <= Model.PagingInfo.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PagingInfo.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i, specialization })">@i</a>
                    </li>
                }

                <li class="page-item @(Model.PagingInfo.CurrentPage == Model.PagingInfo.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PagingInfo.CurrentPage + 1, specialization })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

