@page "/register"
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Реєстрація</h3>

<EditForm Model="@registerModel" OnValidSubmit="RegisterUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="email" class="form-label">Email:</label>
        <InputText id="email" @bind-Value="registerModel.Email" class="form-control" placeholder="Введіть email" />
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Пароль:</label>
        <InputText id="password" @bind-Value="registerModel.Password" type="password" class="form-control" placeholder="Введіть пароль" />
    </div>

    <div class="mb-3">
        <label for="confirmPassword" class="form-label">Підтвердження пароля:</label>
        <InputText id="confirmPassword" @bind-Value="registerModel.ConfirmPassword" type="password" class="form-control" placeholder="Підтвердіть пароль" />
    </div>

    <button type="submit" class="btn btn-primary" disabled="@isLoading">
        @(isLoading ? "Реєстрація..." : "Зареєструватися")
    </button>

    @if (!string.IsNullOrEmpty(message))
    {
        <div class="mt-3 alert @(isSuccess ? "alert-success" : "alert-danger")" role="alert">
            @message
        </div>
    }
</EditForm>

@code {
    private RegisterViewModel registerModel = new();
    private bool isLoading = false;
    private string? message;
    private bool isSuccess;

    private async Task RegisterUser()
    {
        isLoading = true;
        message = null;

        try
        {
            var response = await Http.PostAsJsonAsync("api/account/register", registerModel);
            if (response.IsSuccessStatusCode)
            {
                isSuccess = true;
                message = "Реєстрація пройшла успішно! Ви можете увійти.";
                Navigation.NavigateTo("/login");
            }
            else
            {
                isSuccess = false;
                var errorContent = await response.Content.ReadAsStringAsync();
                message = $"Помилка: {errorContent}";
            }
        }
        catch (Exception ex)
        {
            isSuccess = false;
            message = $"Помилка: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}
